name: "rails test"
on: [push]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rails-test:
    env:
      PGHOST: 127.0.0.1
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      GEM_PATH: vendor/bundle
      RAILS_ENV: test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true

      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Yarn Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactiven

      - name: bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: db create
        run: bundle exec rails db:create db:schema:load --trace

  test-code:
    runs-on: ubuntu-latest
    environment: 'Deploy'
    needs: [rails-test]

    steps:
       - name: Run test
         run: bin/rails test